codes = {
    'ncic': {
        'colors': {
            'AME': 'Amethyst Purple',
            'BGE': 'Beige',
            'BLK': 'Black',
            'BLU': 'Blue',
            'BRO': 'Brown',
            'BRZ': 'Bronze',
            'CAM': 'Camouflage',
            'COM': 'Chrome',
            'CPR': 'Copper',
            'CRM': 'Cream',
            'DBL': 'Dark Blue',
            'DGR': 'Dark Green',
            'GLD': 'Gold',
            'GRN': 'Green',
            'GRY': 'Gray',
            'LAV': 'Lavender Purple',
            'LBL': 'Light Blue',
            'LGR': 'Light Green',
            'MAR': 'Maroon',
            'MVE': 'Mauve',
            'ONG': 'Orange',
            'PLE': 'Purple',
            'PNK': 'Pink',
            'RED': 'Red',
            'SIL': 'Silver',
            'TAN': 'Tan',
            'TEA': 'Teal',
            'TPE': 'Taupe',
            'TRQ': 'Turquoise',
            'WHI': 'White',
            'YEL': 'Yellow',
        },
        'makes': {
            'ACUR': 'Acura',
            'AUDI': 'Audi',
            'BMW': 'BMW',
            'BUIC': 'Buick',
            'CADI': 'Cadillac',
            'CHEV': 'Chevrolet',
            'CHRY': 'Chrysler',
            'DODG': 'Dodge',
            'FORD': 'Ford',
            'GMC': 'GMC',
            'HOND': 'Honda',
            'HYUN': 'Hyundai',
            'INFI': 'Infiniti',
            'ISU': 'Isuzu',
            'JAGU': 'Jaguar',
            'JEEP': 'Jeep',
            'KIA': 'Kia',
            'LEXS': 'Lexus',
            'LINC': 'Lincoln',
            'MAZD': 'Mazda',
            'MITS': 'Mitsubishi',
            'NISS': 'Nissan',
            'PONI': 'Pontiac',
            'PONT': 'Pontiac',
            'STRN': 'Saturn',
            'SUBA': 'Subaru',
            'SUZI': 'Suzuki',
            'TOYT': 'Toyota',
            'VOLK': 'Volkswagen',
            'VOLV': 'Volvo',
        },
        'types': {
            '0B': 'Omnibus',
            '0R': 'Organization',
            'AM': 'Ambulance',
            'AP': 'Apportioned',
            'AQ': 'Antique',
            'AR': 'Amateur Radio',
            'AT': 'All-Terrain Vehicle',
            'BU': 'Bus',
            'C0': 'Commercial',
            'CC': 'Consular Corps',
            'CI': 'City-Owned',
            'CL': 'Collegiate',
            'CM': 'Commemorative',
            'CN': 'Conservation',
            'CU': 'County-Owned',
            'DA': 'Drive Away',
            'DB': 'Dune Buggy',
            'DL': 'Dealer',
            'DP': 'Diplomatic',
            'DU': 'Duplicate',
            'DV': 'Disabled Veteran',
            'DX': 'Disabled Persons',
            'EX': 'Exempt',
            'FD': 'Fire Department',
            'FM': 'Farm Vehicle',
            'HI': 'Hearing Impaired',
            'IP': 'International Plate',
            'IT': 'In-Transit (Temporary)',
            'JJ': 'Judge or Justice',
            'LE': 'Legislative',
            'LF': 'Law Enforcement',
            'MC': 'Motorcycle',
            'MD': 'Motorcycle Dealer',
            'MF': 'Manufacturer',
            'ML': 'Military Vehicle (Canadian)',
            'MP': 'Moped',
            'MR': 'Armed Forces Reservist',
            'MV': 'Military Vehicle (US)',
            'MY': 'Military (Aircraft)',
            'NG': 'National Guard',
            'NP': 'Non-Passenger Civilian Aircraft',
            'PC': 'Passenger Car',
            'PE': 'Personalized/Customized',
            'PF': 'Professions',
            'PH': 'Doctor',
            'PP': 'Passenger Civilian Aircraft',
            'PR': 'Press',
            'PS': 'Professional Sports Team',
            'PX': 'Pharmacist',
            'RE': 'Reciprocal',
            'RV': 'Rented Vehicle or Trailer',
            'SC': 'Special Purpose',
            'SN': 'Snowmobile',
            'ST': 'State-Owned',
            'SV': 'School Vehicle',
            'TK': 'Truck',
            'TL': 'Trailer',
            'TM': 'Temporary',
            'TP': 'Transporter',
            'TR': 'Semi-truck',
            'TX': 'Taxi Cab',
            'US': 'US Government',
            'VF': 'Veteran',
            'ZZ': 'ATV and Snowmobiles',
        }
    }
}


STATE_CODES = [
            "ca-ab",
            "ca-bc",
            "ca-mb",
            "ca-nb",
            "ca-nl",
            "ca-ns",
            "ca-on",
            "ca-pe",
            "ca-qc",
            "ca-sk",
            "mx-agu",
            "mx-bcn",
            "mx-bcs",
            "mx-cam",
            "mx-chh",
            "mx-chp",
            "mx-cmx",
            "mx-coa",
            "mx-col",
            "mx-dur",
            "mx-gro",
            "mx-gua",
            "mx-hid",
            "mx-jal",
            "mx-mex",
            "mx-mic",
            "mx-mor",
            "mx-nay",
            "mx-nle",
            "mx-oax",
            "mx-ona",
            "mx-pue",
            "mx-que",
            "mx-roo",
            "mx-sin",
            "mx-slp",
            "mx-son",
            "mx-tab",
            "mx-tam",
            "mx-tla",
            "mx-ver",
            "mx-yuc",
            "mx-zac",
            "us-ak",
            "us-al",
            "us-ar",
            "us-az",
            "us-ca",
            "us-co",
            "us-ct",
            "us-dc",
            "us-de",
            "us-fl",
            "us-ga",
            "us-hi",
            "us-ia",
            "us-id",
            "us-il",
            "us-in",
            "us-ks",
            "us-ky",
            "us-la",
            "us-ma",
            "us-md",
            "us-me",
            "us-mi",
            "us-mn",
            "us-mo",
            "us-ms",
            "us-mt",
            "us-nc",
            "us-nd",
            "us-ne",
            "us-nh",
            "us-nj",
            "us-nm",
            "us-nv",
            "us-ny",
            "us-oh",
            "us-ok",
            "us-or",
            "us-pa",
            "us-pr",
            "us-ri",
            "us-sc",
            "us-sd",
            "us-tn",
            "us-tx",
            "us-ut",
            "us-va",
            "us-vt",
            "us-wa",
            "us-wi",
            "us-wv",
            "us-wy"
            ]

state_map = {}
for code in STATE_CODES:
    region_code = code.split('-')[-1]
    state_map[region_code] = code

def fix_state(state_code, logger=None):
    # Some states swap in zeros for o
    state_code = state_code.replace("0", "O").lower()

    if state_code in state_map:
        return state_map[state_code]

    if logger is not None:
        # Cannot parse state code
        logger.warn("Cannot find state code " + str(state_code))

    return ''
